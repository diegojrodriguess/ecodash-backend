{
  "info": {
    "_postman_id": "4b592089-c817-4680-bf2e-491e74a8e136",
    "name": "Ecodash API",
    "description": "API for Ecodash - a research project management system.\n\n**Features:**\n- Researcher management (CRUD)\n- Project management (CRUD)\n- Project assigned to researchers (1:N relationship)\n\n**Base URL:** http://localhost:3000\n\n**Developer Notes:**\n- Use DTOs to validate inputs\n- All dates must be in ISO format\n- Error handling follows NestJS exception filters\n- JSON bodies required for POST and PUT",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "üë©‚Äçüî¨ Researcher",
      "item": [
        {
          "name": "üìã Get All Researchers",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/researchers",
              "host": ["{{base_url}}"],
              "path": ["researchers"]
            }
          },
          "response": []
        },
        {
          "name": "üîç Get Researcher by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/researchers/{{researcher_id}}",
              "host": ["{{base_url}}"],
              "path": ["researchers", "{{researcher_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "‚ú® Create Researcher",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Jane Goodall\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/researchers",
              "host": ["{{base_url}}"],
              "path": ["researchers"]
            }
          },
          "response": []
        },
        {
          "name": "üìù Update Researcher",
          "request": {
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Jane G. Updated\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/researchers/{{researcher_id}}",
              "host": ["{{base_url}}"],
              "path": ["researchers", "{{researcher_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "üóëÔ∏è Delete Researcher",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/researchers/{{researcher_id}}",
              "host": ["{{base_url}}"],
              "path": ["researchers", "{{researcher_id}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìÅ Project",
      "item": [
        {
          "name": "üìã Get All Projects",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/projects",
              "host": ["{{base_url}}"],
              "path": ["projects"]
            }
          },
          "response": []
        },
        {
          "name": "üîç Get Project by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/projects/{{project_id}}",
              "host": ["{{base_url}}"],
              "path": ["projects", "{{project_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "‚ú® Create Project",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Mangrove Recovery\",\n  \"status\": \"active\",\n  \"geometry\": { \"type\": \"Point\", \"coordinates\": [100.0, 0.0] },\n  \"researcherId\": \"{{researcher_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/projects",
              "host": ["{{base_url}}"],
              "path": ["projects"]
            }
          },
          "response": []
        },
        {
          "name": "üìù Update Project",
          "request": {
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Mangrove Recovery\",\n  \"status\": \"completed\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/projects/{{project_id}}",
              "host": ["{{base_url}}"],
              "path": ["projects", "{{project_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "üóëÔ∏è Delete Project",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/projects/{{project_id}}",
              "host": ["{{base_url}}"],
              "path": ["projects", "{{project_id}}"]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Common headers for every request",
          "pm.request.headers.upsert({ key: 'Accept', value: 'application/json' });"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "pm.test('Status code is successful', function () {",
          "  pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
          "});",
          "",
          "try {",
          "  const json = pm.response.json();",
          "  if (json.id) {",
          "    if (pm.request.url.includes('/projects')) pm.environment.set('project_id', json.id);",
          "    if (pm.request.url.includes('/researchers')) pm.environment.set('researcher_id', json.id);",
          "  }",
          "} catch (e) { console.log('No JSON body or invalid JSON'); }"
        ]
      }
    }
  ],
  "variable": [
    { "key": "base_url", "value": "http://localhost:3000" },
    { "key": "project_id", "value": "" },
    { "key": "researcher_id", "value": "" }
  ]
}
